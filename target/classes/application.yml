spring:
  datasource:
    #    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://172.23.32.246:43306/todo_service?useUnicode=true&characterEncoding=utf-8&useSSL=false}
#    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://172.23.32.246:/?useUnicode=true&characterEncoding=utf-8&useSSL=false}
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://172.23.32.245:3306/?useUnicode=true&characterEncoding=utf-8&useSSL=false}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:hsophsop}
  redis:
    host: ${SPRING_REDIS_HOST:redis.hzero.org}
#    host: ${SPRING_REDIS_HOST:172.23.32.245}
    port: ${SPRING_REDIS_PORT:6379}
    database: ${SPRING_REDIS_DATABASE:8}
    # Redis连接超时时间
    connect-timeout: ${SPRING_REDIS_CONNECT_TIMEOUT:2000}
    # Redis读取超时时间
    timeout: ${SPRING_REDIS_READ_TIMEOUT:5000}
    lettuce:
      pool:
        # 资源池中最大连接数
        # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整
        max-active: ${SPRING_REDIS_POOL_MAX_ACTIVE:50}
        # 资源池运行最大空闲的连接数
        # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整，一般建议和max-active保持一致，避免资源伸缩带来的开销
        max-idle: ${SPRING_REDIS_POOL_MAX_IDLE:50}
        # 当资源池连接用尽后，调用者的最大等待时间(单位为毫秒)
        # 默认 -1 表示永不超时，设置5秒
        max-wait: ${SPRING_REDIS_POOL_MAX_WAIT:5000}

# MyBatis Mapper 扫描
mybatis:
  mapperLocations: classpath*:/mapper/*.xml
  configuration:
    mapUnderscoreToCamelCase: true


# 日志配置
logging:
  level:
    org.hzero: ${LOG_LEVEL:debug}
    org.apache.ibatis: ${LOG_LEVEL:debug}
    io.choerodon: ${LOG_LEVEL:debug}